from random import randint
"""
#1 - Mostrar os 5 primeiros múltiplos de 3
for num in range(1,6):
    print(num*3)

#2 - Escrever de 1 a 100 de 1 em 1 2 vezes, usando for e while
for num in range(1,101):
    print(num)
    
n = 1
while n<101:
    print(n)
    n+=1

#3 - Mostrar contagem regressiva de 10 a 0 e mostrar FIM no final
for num in range(10,-1,-1):
    print(num)
print("FIM!")

#4 - Inicializar um inteiro com 0 e incrementar de 1000 em 1000, imprimindo até que chegue a 100mil
num = 0

while num<=100000:
    print(num)
    num+=1000

#5 - Faça um programa para digitar 10 valores e somá-los
num = 0
for i in range(10):
    valor = float(input("Digite um número: "))
    num += valor
print(num)

#6 - Ler 10 inteiros e imprimir a média
valor = 0
for i in range(10):
    num = float(input("Digite um valor: "))
    valor += num
media = valor/10
print(media)

#7 - Ler 10 inteiros positivos, ignorando não positivos e imprima sua média
valor = 0
cont = 0

for i in range(10):
    num = int(input("Digite um número inteiro: "))
    if num >0:
        valor += num
        cont +=1
media = valor/cont
print(media)

#8 - Ler 10 números e escrever o menor valor lido e o maior valor lido
first = float(input("Digite um número: "))
temp = 0
min = first
max = first

for i in range(9):
    num = float(input("Digite um número: "))
    temp = num
    if temp <= min:
        min = temp
    if temp>= max:
        max = temp
print(f"Mínimo: {min}. Máximo: {max}")

#9 - Ler um inteiro N e imprimir os N primeiros numeros naturais impares
inteiro = int(input("Digite um número inteiro: "))

for i in range(1,inteiro+1):
    impar = (2*i-1)
    print(impar)

#10 - Calcular e mostrar a soma dos 50 primeiros naturais pares
valor = 0

for i in range(50):
    par = 2*i
    valor +=par
print(valor)

#11 - Ler um inteiro positivo N e imprimir todos os naturais de 0 até N crescente
N = int(input("Digite um número inteiro positivo: "))

if N>0:
    for i in range(0,N+1):
        print(i)
else:
    print(f"{N} não é positivo.")

#12 - Ler um inteiro positivo N e imprimir todos os naturais de 0 até N decrescente
N = int(input("Digite um número inteiro positivo: "))

if N>0:
    for i in range(N,-1,-1):
        print(i)
else:
    print(f"{N} não é positivo.")


#13 - Ler um inteiro positivo par N e imprimir todos os numeros pares de 0 ate n crescente
N = int(input("Digite um número inteiro par positivo: "))

if N>0 and N%2 == 0:
    for i in range(0,N+1,2):
        print(i)
else:
    print(f"{N} não é positivo ou não é par.")

#14 - Ler um inteiro positivo par N e imprimir todos os numeros pares de 0 ate n decrescente    
N = int(input("Digite um número inteiro par positivo: "))

if N>0 and N%2 == 0:
    for i in range(N,-1,-2):
        print(i)
else:
    print(f"{N} não é positivo ou não é par.")



#15 - Ler um inteiro positivo impar n e imprimir todos os impares de 1 a n crescente    
N = int(input("Digite um número inteiro ímpar positivo: "))

if N>0 and N%2 == 1:
    for i in range(1,N+1,2):
        print(i)
else:
    print(f"{N} não é positivo ou não é ímpar.")

#16 - Ler um inteiro positivo impar n e imprimir todos os impares de 1 a n decrescente       
N = int(input("Digite um número inteiro ímpar positivo: "))

if N>0 and N%2 == 1:
    for i in range(N,0,-2):
        print(i)
else:
    print(f"{N} não é positivo ou não é ímpar.")

#17 - Ler um inteiro positivo n e calcular a soma dos n primeiros numeros naturais
N = int(input("Digite um inteiro positivo: "))
total = 0

if N>0:
    for i in range(1,N+1):
        total += i
else:
    print(f"{N} não é positivo")
print(f"A soma dos {N} primeiros números naturais é {total}")

#18 - Ler certa quant de numeros e imprimir o maior deles e quantas vezes o maior numero foi lido
N = int(input("Quantos números deseja comparar: "))
if N>0:
    first = float(input("Digite um número: "))

    max = first
    cont = 1
    for i in range(N-1):
        num = float(input("Digite um número: "))
        if num>max:
            max = num
            cont=1
        elif num==max:
            cont+=1
    print(f"O valor máximo é {max} e o máximo foi lido {cont} vezes.")
else:
    print(f"{N} não é positivo")


#19 - Ler um inteiro de 100 a 999 e imprima cada um dos algarismos
num = int(input("Digite um número de 100 a 999: "))

if 100<=num<=999:
    string = str(num)
    for i in string:
        print(i)
else:
    print("O número escolhido não está entre 100 e 999")

#20 - Ler uma sequencia de numeros e determinar se sao pares ou nao. Deverá informar o numero de dados lidos e quantos sao pares. O processo termina se digitar 1000
num = 0
contpar = 0
contnum =0

while True:
    num = int(input("Digite um número inteiro: "))
    if num == 1000:
        break
    contnum +=1
    if num%2==0:
        print("O número informado é par!")
        contpar +=1
    else:
        print("O número informado é ímpar!")
print(f"Número de dados inseridos: {contnum}. Quantidade de números pares: {contpar}")

#21 - Ler 2 números. Calcule soma dos pares no intervalo desses numeros, incluindo os 2
e a multiplicação dos numeros impares desse intervalo, incluindo os digitados
num1 = int(input("Digite o primeiro valor do intervalo: "))
num2 = int(input("Digite o segundo valor do intervalo: "))
soma = 0
mult = 1

if num1%2==0:
    if num2%2==0:
        r1 = range(num1,num2+1,2)
        r2 = range(num1+1,num2,2)
    else:
        r1 = range(num1,num2,2)
        r2 = range(num1+1,num2+1,2)
else:
    if num2%2==0:
        r1 = range(num1+1,num2+1,2)
        r2 = range(num1,num2,2)
    else:
        r1 = range(num1+1,num2,2)
        r2 = range(num1,num2+1,2)

for i in r1:
    soma += i
  
for i in r2:
    mult *= i

print(f"A soma dos pares no intervalo ({num1},{num2}) é {soma}.")
print(f"A multiplicação dos ímpares no intervalo ({num1},{num2}) é {mult}.")

#22 - Ler uma sequencia arbitraria de notas validas no intervalo de 10 a 20 e que mostre a media aritmetica. O numero de notas nao sera fornecido ao programa, e terminará quando introduzido um valor que nao seja valido como nota
soma = 0
cont = 0
while True:
    num = float(input("Digite uma nota entre 10 e 20: "))
    if 10<=num<=20:
        soma+=num
        cont+=1
        media = soma/cont
    else:
        print("A nota inserida não está entre 10 e 20.")
        break
print(f"A média é {media}.")

#23 - Ler um número inteiro positivo e imprimir seus divisores
num = int(input("Digite um inteiro positivo: "))

if num>0:
    for i in range(1,num+1):
        if num%i==0:
            print(f"{i}, ", end='')
else:
    print("O número digitado não é positivo.")

#24 - Ler um número inteiro e calcular a soma de todos os divisores desse número, com excessão dele próprio.
num = int(input("Digite um número inteiro positivo: "))
soma = 0

if num>0:
    for i in range(1,num):
        if num%i==0:
            soma+=i
else:
    print("O número digitado não é positivo.")

print(f"A soma dos divisores de {num}, com excessão dele mesmo é {soma}.")

#25 - Somar todos os números abaixo de 1000 que são múltiplos de 3 ou 5
soma=0

for i in range(1,1000):
    if i%3==0 or i%5==0:
        soma+=i
print(f"O valor da soma dos naturais abaixo de 1000, divisíveis por 3 ou por 5 é {soma}.")

#26 - Encontre o primeiro múltiplo de 11, 13 ou 17 após o número dado
num = int(input("Digite um número inteiro: "))

for i in range (num,100000000000000000):
    if i%11==0 or i%13==0 or i%17==0:
        print(i)
        break

#27 - O número harmônico H(n) = 1+1/2+1/3+...+1/n. Ler um valor n e apresente H(n)
N = int(input("Digite um número inteiro positivo: "))
soma = 0
if N>0:
    for i in range(1,N+1):
        soma+=1/i
else:
    print("O valor digitado não é positivo.")
print(soma)

#28 - Ler um valor N inteiro e positivo, calcular e mostrar E(N) = 1+1/1!+1/2!+1/3!+...+1/N!
N = int(input("Digite um valor inteiro positivo: "))
fact = 1
soma = 1
if N>0:
    for i in range(1,N+1):
        fact = 1
        for c in range(1,i+1):
            fact *= c
        soma += 1/fact
else:
    print("O valor digitado não é positivo.")
print(soma)

#29 - Calcular o valor da série, para 5 termos S = 0 + 1/2! + 2/4! + 3/6! + ...
soma = 0
fact = 1
for i in range(0,5):
    fact = 1
    for c in range(1,2*i+1):
        fact *= c
    soma+=i/fact
print(f"soma={soma}")

#30 - Fazer programas para calcular as sequencias: 1 + 2 + 3 + 4 + 5 + ... + n / 1 - 2 + 3 - 4 + 5 + ... + (2n -1) / 1 + 3 + 5 +7 + ... + (2n-1)
num = int(input("Digite um número: "))
soma = 0

for i in range(1,num+1):
    soma += i
print(soma)

num = int(input("Digite um número: "))
soma = 0

for i in range(1,2*num):
    soma +=i*((-1)**(i+1))
print(soma)

num = int(input("Digite um número: "))
soma = 0

for i in range(1,2*num):
    if i%2==1:
        soma+=i
print(soma)

#31 - Calcule e escreva o valor de S = 1/1 + 3/2 + 5/3 + 7/4 +...+99/50
soma = 0
for i in range(1,51):
    soma+= (2*i-1)/i
print(soma)

#32 - Simular o lançamento de dois dados d1, d2, n vezes e tem como saída o número de cada dado e a relação entre eles (>,<,=) de cada lançamento
n = int(input("Digite o número de lançamentos: "))

for i in range(n):
    dado1 = randint(1,6)
    dado2 = randint(1,6)
    print(f"1º Dado: {dado1}, 2º Dado: {dado2}.")
    if dado1>dado2:
        print(f"{dado1}>{dado2}")
    elif dado2>dado1:
        print(f"{dado1}<{dado2}")
    else:
        print(f"{dado1}={dado2}")

#33 - Dados n e 2 números inteiros positivos i e j diferentes de 0, imprimir em ordem crescente os n primeiros naturais que são multiplos de i ou de j ou de ambos.Exemplo: para n=6, i=2 e j=3 a saída devera ser: 0,2,3,4,6,8
n = int(input("Digite um número inteiro positivo: "))
i = int(input("Digite um número inteiro positivo: "))
j = int(input("Digite um número inteiro positivo: "))
mult= 0
lista = []

for valor in range(n):
    lista.append(i*valor)
    lista.append(j*valor)
lista.sort()
res =[]

for num in lista:
    if num not in res:
        res.append(num)

for valor in range(n):
    print(res[valor])

#34 - Calcular o menor numero divisivel por cada um dos numero de 1 a 20

*Não otimizado -> tempo muito longo
num = 0 
div = 1
while True:
    num+=1
    div = 1
    for i in range(1,21):
        if num%i==0:
            div*=1
        else:
            div*=0
    if div==1:
        print(num)
        break



#35 - Somar numeros impares contidos num intervalo definido pelo usuario. Numero incial menor que o final - erro
num1 = int(input("Digite o valor inicial do intervalo: "))
num2 = int(input("Digite o valor final do intervalo: "))
soma = 0

if num1<=num2:
    if num1%2==0:
        for i in range(num1+1,num2+1,2):
            soma+=i
    else:
        for i in range(num1,num2+1,2):
            soma+=i
    print(soma)
else:
    print("O valor inicial do intervalo é maior do que o final.")

#36 - Calcular a diferença entre a soma dos quadrados dos primeiros 100 naturais e o quadrado da soma
soma1=0

for i in range(1,101):
    soma1 +=i**2
print(soma1)

soma2=0
for j in range(1,101):
    soma2 += j
    quad = soma2**2
print(quad)

res = quad-soma1
print(res)

#37 - Verificar quais numeros entre 1000 e 9999 inclusive possuem a propriedade: A soma dos dois digitos de mais baixa ordem com os dois de mais alta ordem, elevada ao quadrado da o proprio numero
for i in range(1000,10000):
    strnum = str(i)
    part1 = int(strnum[0:2])
    part2 = int(strnum[2:4])
    res = (part1+part2)**2
    if res == i:
        print(i)

#38 - Calcular o terno pitagorico a,b,c com a+b+c=1000 satisfazendo a²+b²=c²
for i in range(1,1000):
    for j in range(i,1000):
        for k in range(j,1000):
            if i+j+k==1000:
                if i**2+j**2==k**2:
                    print(f"{i},{j},{k} é um terno pitagórico.")

#39 - Calcular area de um triangulo, cuja base e altura sao fornecidos pelo usuario, nao pode aceitar dados invalidos
base = float(input("Digite o valor da base do triângulo: "))
altura = float(input("Digite o valor da altura do triângulo: "))
if base<=0 or altura<=0:
    print("O valor da base ou da altura inserida não pode ser negativo ou nulo.")
else:
    area = base*altura/2
    print(f"A área do triângulo de base {base} e alura {altura} é {area}.")

#40 - Leitura de varios numeros inteiros ate que se digite um negativo. o programa retorna o maior e menor numero lido
first = int(input("Digite um número inteiro positivo: "))
if first>0:
    max = first
    min = first
    while True:
        num = int(input("Digite um número inteiro positivo: "))
        if num<=0:
            print("O número digitado é nulo ou negativo.")
            break
        else:
            if num>=max:
                max = num
            if num<=min:
                min = num
    print(f"Mín = {min} / Máx = {max}.")
else:
    print("O número digitado é nulo ou negativo.")

#41 - Calcular a associaçao em paralelo de 2 resistores até que o usuario digite uma resistencia 0 R=(R1*R2)/(R1+R2)
print("Cálculo de associação de resistores em paralelo.\nDigite 0 para o valor da resistência para sair do programa.")
while True:
    r1 = float(input("Digite um valor de resistência: "))
    r2 = float(input("Digite um valor de resistência: "))
    if r1==0 or r2==0:
        print("Fechando o programa.")
        break
    else:
        res = (r1*r2)/(r1+r2)
        print(f"O valor da resistência da associação de {r1} e {r2} é {res}.")

#42 - Ler um conjunto não determinado de valores, um de cada vez e escreva para cada um o quadrado, cubo e raiz. Finalize a entrada com um valor negativo ou 0
while True:
    num = float(input("Digite um número positivo: "))
    if num>0:
        quad = num**2
        cubo = num**3
        raiz = num**0.5
        print(f"O quadrado de {num} é {quad}.\nO cubo de {num} é {cubo}.\nA raíz de {num} é {raiz}.")
    else:
        print("O valor fornecido é nulo ou negativo.")
        break

#43 - Ler um número indeterminado de idades e calcule a média desse grupo(sair quando idade=0)
soma = 0
cont = 0

while True:
    idade = int(input("Digite uma idade: "))
    if idade>0:
        soma += idade
        cont += 1
    else:
        print("O valor fornecido é negativo ou nulo.")
        break
media = soma/cont
print(f"A média das idades é {media}.")

#44 - Ler número positivo do usuário, imprimir a sequencia de Fibonacci até o primeiro numero superior ao numero lido.
limite = int(input("Digite um número positivo: "))
i = 0
j = 1

while j<=limite:
    k = i+j
    i = j
    j = k
    print(k)

#45 - Converter velocidade km/h para m/s e vice versa. Criar menu com duas opçoes de conversao e com opçao para finalizar o programa. Podera fazer quantas conversoes quiser, e sera encerrado quando a opçao finalizar for escolhida
while True:
    opcao = input("Escolha uma opção para continuar:\n1 - Converter km/h para m/s.\n2 - Converter m/s para km/h.\n3 - Finalizar programa.\n")
    if opcao == '1':
        kilometros = float(input("Digite uma velocidade em km/h: "))
        vel = kilometros/3.6
        print(f"{kilometros}km/h são {vel}m/s.")
    elif opcao == '2':
        metroseg = float(input("Digite uma velocidade em m/s: "))
        vel = metroseg*3.6
        print(f"{metroseg}m/s são {vel}km/h.")
    elif opcao == '3':
        print("Encerrando o programa...")
        break
    else:
        print("A opção escolhida não é válida")

#46 - Gerar um aleatorio de 1 a 1000. O usuario devera tentar acertar o numero que foi gerado e a cada tentativa o programa devera informar se o chute é menor ou maior que o numero gerado. Ele acaba quando o usuario acerta o numero. Deve informar em quantas tentativas o numero foi descoberto
rand = randint(1,1000)
print("Um número de 1 a 1000 foi escolhido aleatoriamente, tente acertá-lo!")
cont = 0
while True:
    num = int(input("Digite um valor entre 1 a 1000: "))
    cont+=1
    if num > rand:
        print("O valor digitado é maior do que o valor correto.")
    elif num < rand:
        print("O valor digitado é menor do que o valor correto.")
    else:
        print(f"Você acertou!! O valor correto é {rand}. Você acertou em {cont} tentativas.")
        break

#47 - Apresente um menu de opçoes para o calculo das seguintes operaçoes entre dois numeros: adiçao op 1, sub, mult, div e saida. O programa so termina quando a opçao escolhida for a opcao de saida
while True:
    opcao = input("Escolha uma operação:\n1 - Adição\n2 - Subtração\n3 - Multiplicação\n4 - Divisão\n5 - Sair do programa\n")
    if opcao == "5":
        print("Saindo do programa...")
        break
    
    num1 = float(input("Digite o primeiro valor: "))
    num2 = float(input("Digite o segundo valor: "))

    if opcao == "1":
        res = num1+num2
        print(f"{res}={num1}+{num2}")
    elif opcao == "2":
        res = num1-num2
        print(f"{res}={num1}-{num2}")
    elif opcao == "3":
        res = num1*num2
        print(f"{res}={num1}x{num2}")
    elif opcao == "4":
        if num2 != 0:
            res = num1/num2
            print(f"{res}={num1}/{num2}")
        else:
            print("Não se pode dividir por 0!")
    else:
        print("A opção escolhida é inválida.")

#48 - Some os termos de valor par da seq de fibonacci, cujo valores nao ultrapassem 4milhoes
soma = 0
i = 0
j = 1
while True:
    k = i+j
    i = j
    j = k
    if k%2==0:
        soma+=k
    if k>4000000:
        break
print(soma)

#49 - joao = 1/3 salario de carlos. carlos 2% ao mes e joao 5% ao mes. Construa um programa que calcula e mostra a quantidade de meses nec para o valor de joao igualar ou ultrapassar carlos
mes = 0

while True:
    mes+=1
    carlos = 1000*(1.02)**mes
    joao = (1000/3)*(1.05)**mes
    if joao >= carlos:
        print(f"Meses: {mes} / Carlos: {carlos} / João: {joao}.")
        break

#50 - Chico tem 1.5 metro e cresce 2 cm por ano e ze tem 1.10 m e cresce 3 cm por ano. Quantos anos serão necessarios para que ze seja maior que chico
chico = 1.5
ze = 1.1
ano = 0
while ze<=chico:
    chico+=0.02
    ze+=0.03
    ano+=1
print(f"São necessários {ano} anos. Chico = {chico} / Zé = {ze}.")

#51 - Funcionário recebe aumento anual. Em 95 foi contratado por 2000 reais. Em 96 recebeu aumento de 1.5%. A partir de 97, os aumentos sempre correspondem ao dobro do ano anteiror. Faça um programa que determine o salário atual do funcionário
taxa = 0.15
for i in range(1996,2021):
    salario = 2000*(1+taxa)
    taxa *=2
print(salario)

#53 - Receber o valor do saque realizado pelo cliente de um banco e retorne quantas notas de cada valor serão necessárias para atender ao saque com a menor quantidade de notas possível. Serao usadas notas de 100,50,20,10,5,2,1 real

while True:
    saque = int(input("Digite o valor do saque(Digite 0 ou negativo para sair do programa): "))
    if saque<=0:
        print("Saindo do programa...")
        break
    else:
        notas = [100,50,20,10,5,2,1]
        restante = saque
        for i in notas:
            notasi = int(restante/i)
            restante -= notasi*i
            if notasi>0:
                print(f"{notasi} notas de {i}")

#53 - Escreva um programa que leia um número inteiro positivo n e em seguida imprima n linhas do Triangulo de Floyd.
n = int(input("Digite um número inteiro positivo: "))
valor = 1
for i in range(1,n+1):
    for j in range(1,i+1):
        print(valor,end=" ")
        valor+=1
    print('\n')

#54 - Receba um número inteiro maior que 1 e verificar se o número é primo ou não
while True:
    num = int(input("Digite um número inteiro positivo(0 para sair do programa): "))
    if num<=0:
        print("Número digitado é negativo ou nulo. Saindo do programa...")
        break
    else:
        div = 0
        for i in range(1,num+1):
            if num%i==0:
                div +=1
                if div>2:
                    break
        if div==2:
            print("Número é primo.")
        else:
            print("Número não é primo.")

#55 - Ler um inteiro não negativo n e imprimir a soma dos n primeiros números primos
n = int(input("Digite um número inteiro positivo: "))
soma = 0
cont = 0
primoatual = 0

while cont < n:
    primoatual +=1
    div = 0
    for i in range(1,primoatual+1):
        if primoatual%i==0:
            div+=1
            if div>2:
                break
    if div==2:
        cont +=1
        soma+=primoatual
print(f"A soma dos {n} primeiros primos é {soma}.")

#56 - Calcular a soma de todos os números primos abaixo de 2 milhões
primoatual = 0
soma = 0


while primoatual<=2000000:
    primoatual+=1
    div=0
    for i in range(1,primoatual+1):
        if primoatual!=2 and primoatual%2==0:
            break
        elif primoatual!=3 and primoatual%3==0:
            break
        elif primoatual%i==0:
            div+=1
            if div>2:
                break
    if div==2:
        soma+=primoatual
        print(f"Primo atual = {primoatual} / Soma = {soma}.")

print(f"A soma dos primos menores que 2 Milhões é {soma}")

#57 - Fazer um programa que conte quantos números primos existem entre a e b, onde a e b são números informados pelo usuário
a = int(input("Digite o valor inicial do intervalo: "))
b = int(input("Digite o valor final do intervalo: "))
primoatual = a
cont = 0
while primoatual<=b:
    div = 0
    for i in range(a,primoatual+1):
        if primoatual%i==0:
            div+=1
    if div==2:
        cont += 1
    primoatual+=1
    
print(cont)

#58 - Fazer um programa que some os números primos existentes entre a e b
a = int(input("Digite o valor inicial do intervalo: "))
b = int(input("Digite o valor final do intervalo: "))
primoatual = a
cont = 0
soma = 0
while primoatual<=b:
    div = 0
    for i in range(a,primoatual+1):
        if primoatual%i==0:
            div+=1
    if div==2:
        cont += 1
        soma+=primoatual
    primoatual+=1
    
print(cont,soma)

#59 - Ler o número de habitantes de uma cidade, valor do kwh e para cada habitante entre com os seguintes dados: consumo do mes, codigo do consumidor(1-Residencial, 2-comercial, 3-industrial). No final imprima o maior, menor e a media do consumo dos habitantes. Por fim o total do consumo de cada categoria
hab = int(input("Digite o número de habitantes da cidade: "))
valor = float(input("Digite o valor do kwh: "))
consumos1 = []
consumos2 = []
consumos3 = []
consumos = []

if hab>0:
    for i in range(hab):
        consumo = float(input("Digite o consumo de kwh: "))
        cod = input("Digite o código correspondente:\n1 - Residencial\n2 - Comercial\n3 - Industrial\n")
        if cod == "1":
            consumos1.append(consumo)
        elif cod == "2":
            consumos2.append(consumo)
        elif cod == "3":
            consumos3.append(consumo)
        else:
            print("O código digitado não é válido.")
            break
    consumos = consumos1+consumos2+consumos3

    print(f"Máximo: {max(consumos)}, Mínimo: {min(consumos)}, Média: {sum(consumos)/len(consumos)}")
    print(f"Soma Grupo 1: {sum(consumos1)}, Soma Grupo 2: {sum(consumos2)}, Soma Grupo 3: {sum(consumos3)}")

else:
    print("O número de habitantes precisa ser maior do que 0.")

#60 - Ler varios numeros e mostrar:a) A soma dos numeros digitados / b) A quantidade de numeros digitados / c) A média dos numeros digitados / d) O maior numero digitado / e) O menor numero digitado / f) A media dos pares // Finalize a entrada de dados caso o usuario digite 0
lista = []

while 0 not in lista:
    num = float(input("Digite um número: "))
    lista.append(num)

lista.remove(0)

soma = sum(lista)
tam = len(lista)
media = soma/tam
min = min(lista)
max = max(lista)
somapar = 0

for i in lista:
    if i%2==0:
        somapar+=i
print(f"Soma = {soma}\nQuantidade de números = {tam}\nMédia = {media}\nMínimo = {min}\nMáximo = {max}\nSoma dos pares = {somapar}")

#61 - Fazer um programa que calcule o maior numero palíndromo feito a partir do produto de dois numeros de 3 digitos. Ex: O maior palindromo feito a partir de 2 numeros de 2 digitos é 9009 = 91*99
lista = []
listanum = []

for i in range (1000,100,-1):
    for j in range(1000,100,-1):
        valor = i*j
        palindromo = str(valor)
        if (palindromo[0:3])==(palindromo[3:7]):
            lista.append(palindromo)
            break
for item in lista:
    listanum.append(int(item))

res = max(listanum)
print(res)

"""
